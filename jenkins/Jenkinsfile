pipeline {
    agent {
        docker {
            image 'python' // Specify the Docker image with Python installed
            args '-u root:root' // Run as root to avoid permission issues
        }
    }

    environment {
        VIRTUAL_ENV = "${env.WORKSPACE}/CodingBuddy/venv"
        PATH = "${env.VIRTUAL_ENV}/bin:${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Set up Python') {
            steps {
                sh '''
                    #!/bin/bash
                    cd CodingBuddy
                    python -m venv venv
                    source venv/bin/activate
                    pip install -r requirements.txt
                '''
            }
        }
        stage('Run Migrations') {
            steps {
                sh '''
                    #!/bin/bash
                    cd CodingBuddy
                    source venv/bin/activate
                    python manage.py migrate
                '''
            }
        }
        stage('Run Tests') {
            steps {
                sh '''
                    #!/bin/bash
                    cd CodingBuddy
                    source venv/bin/activate
                    python manage.py test
                '''
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/CodingBuddy/db.sqlite3', fingerprint: true
            junit 'CodingBuddy/reports/*.xml'
        }
    }
}
